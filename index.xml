<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S. Verona Lišková</title>
    <link>https://sverona.dev/</link>
    <description>Recent content on S. Verona Lišková</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sverona.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Brutalism and dopamine</title>
      <link>https://sverona.dev/blog/dopamine/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/dopamine/</guid>
      <description>Brutalism is from the French brut, meaning raw, evoking raw concrete.
It is also very often brutal in that it throws cold water on your new ideas that make you excited to try and write and test. No! Only raw concrete.
I really enjoy seeing cool stuff done with the Web. My design philosophies, however, run increasingly brutal &amp;mdash; that is to say, aggressively minimalist. This is often frustrating. Brutalism&amp;rsquo;s answer to seemingly everything that is cool or pretty is slapping your hands away and saying &amp;ldquo;you ain&amp;rsquo;t gonna need it.</description>
    </item>
    
    <item>
      <title>Solutions to infra-exercises I</title>
      <link>https://sverona.dev/infrabayes/pset1/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/infrabayes/pset1/</guid>
      <description>These are S&amp;rsquo;s solutions for the first set of infra-Bayesian exercises. Spoilers, of course!
I decree this a Moore method problem set! That means you&amp;rsquo;re allowed to be as pedantic about definitions as you like, and I commit to addressing your pedantry. Please shoot me an email if there&amp;rsquo;s a way I can improve this document&amp;rsquo;s rigor and/or clarity!
Notes When the document says monotone, it means what most analysis textbooks call increasing.</description>
    </item>
    
    <item>
      <title>What I use</title>
      <link>https://sverona.dev/whatiuse/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/whatiuse/</guid>
      <description>Hardware Computer: My daily driver laptop is a ThinkPad X220T. It needs occasional maintenance, but this tends to be very inexpensive. At some point I would like to upgrade to a refurbished 4:3 model &amp;mdash; I keep a T60 in my desk for just such an occasion.
Phone: My phone is a Samsung Galaxy S8, which I&amp;rsquo;ve had since I was a teen because Phones Are Expensive. This represents a good chunk of my nonfree software usage, and I&amp;rsquo;m looking forward to getting a PinePhone in the near future.</description>
    </item>
    
    <item>
      <title>Hypertrigonometric functions</title>
      <link>https://sverona.dev/blog/dixon/</link>
      <pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/dixon/</guid>
      <description>So, I fell down a Wiki-hole today and figured I could get a blog post out of it.For the curious: AuthaGraph projection → Lee conformal world in a tetrahedron → Dixon elliptic functions. Specifically, I encountered the Dixon elliptic functions \(\mathrm{sm}\) and \(\mathrm{cm}.\) These satisfy a generalization of the Pythagorean identity \[\sin^2 z + \cos^2 z = 1 \longrightarrow \operatorname{sm}^3 z + \operatorname{cm}^3 z = 1 \] with \(\operatorname{sm} 0 = 0, \operatorname{cm} 0 = 1.</description>
    </item>
    
    <item>
      <title>About the author</title>
      <link>https://sverona.dev/about/</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/about/</guid>
      <description>Hello! I&amp;rsquo;m S. I am properly addressed as they, them, and theirs.Other, stranger pronouns are available upon request.
I hold a Master&amp;rsquo;s degree in mathematics from Western Kentucky University.You can read my thesis on this very site. Presently I make my home in Grand Rapids, by way of Bowling Green and Louisville.
I write software and do mathematics. In my spare time, I make excellent coffee, cook delicious vegan food for my fiancé, powerlift, run, cycle, and do the masochism tango with the Seattle Mariners.</description>
    </item>
    
    <item>
      <title>Automating transaction imports with Actual</title>
      <link>https://sverona.dev/blog/automating-actual/</link>
      <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/automating-actual/</guid>
      <description>My fiancé, who is a CFP, recently encouraged me to finally set up a budget. I found Actual to be the most appropriate client for me; I love the nice design and the very responsive devteam. So far it&amp;rsquo;s a wonderful open-source project that I want to contribute to in the future.
The killer feature Actual is currently missing is inbuilt transaction import. Apparently this is in development through Plaid integration, but I can&amp;rsquo;t find a timeline on this, and in order for me to be able to stick with a budget I need to not have to manually type in a payee, date, and amount every time I buy something.</description>
    </item>
    
    <item>
      <title>LeechBlock in qutebrowser</title>
      <link>https://sverona.dev/blog/qutebrowser-blocking/</link>
      <pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/qutebrowser-blocking/</guid>
      <description>I use qutebrowser as my daily driver. With the exception of the errant ad that Firefox or Chrome would catch,An active area of research. there is nothing to complain about.
Unfortunately I&amp;rsquo;ve developed a nasty habit of unthinkingly typing in anxiogenic websites. The usual solution on Chrome/Firefox is LeechBlock, but qutebrowser naturally doesn&amp;rsquo;t support extensions.I&amp;rsquo;m honestly fine with this design choice; most of the extensions I would need are implementable as user stylesheets/scripts/plugins, this one included.</description>
    </item>
    
    <item>
      <title>Refurbishing an old Twitter bot</title>
      <link>https://sverona.dev/blog/amazing-graphs/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/amazing-graphs/</guid>
      <description>Some time ago Numberphile released a series of videos concerning sequences in the OEIS with pretty plots. Inspired, I wrote a little Twitter bot that tweets out two such plots each day. I even got a follow from 3Blue1Brown. It was a wonderful source of dopamine for a while.
Because I hacked the thing together in a dayYou can check out the source code, if you&amp;rsquo;re okay with your eyes melting out of your skull.</description>
    </item>
    
    <item>
      <title>Annotated MERN III: Frontend</title>
      <link>https://sverona.dev/blog/mern/frontend/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/mern/frontend/</guid>
      <description>This post continues our look at James Vickery&amp;rsquo;s simple-mern repository. Today we&amp;rsquo;ll look at the React frontend, under the client/ folder.
package.json We&amp;rsquo;ll ignore package-lock.json, since it was covered previously.
package.json looks very similar to what create-react-app spits out. There are some new options, though, so let&amp;rsquo;s look at them.
{ &amp;#34;proxy&amp;#34;: &amp;#34;http://localhost:5000/&amp;#34;, &amp;#34;eslintConfig&amp;#34;: { &amp;#34;extends&amp;#34;: &amp;#34;react-app&amp;#34; }, &amp;#34;browserslist&amp;#34;: [ &amp;#34;&amp;gt;0.2%&amp;#34;, &amp;#34;not dead&amp;#34;, &amp;#34;not ie &amp;lt;= 11&amp;#34;, &amp;#34;not op_mini all&amp;#34; ] } These are all development-only options, in a sense:</description>
    </item>
    
    <item>
      <title>Annotated MERN II: Backend</title>
      <link>https://sverona.dev/blog/mern/backend/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/mern/backend/</guid>
      <description>This post continues our look at James Vickery&amp;rsquo;s simple-mern repository. Today we&amp;rsquo;ll look at the backend, which is built in Express and Mongo and located under the client/ folder.
index.js This is the root Express server and router. Here are the libraries.
const express = require(&amp;#39;express&amp;#39;); const path = require(&amp;#39;path&amp;#39;); const bodyParser = require(&amp;#39;body-parser&amp;#39;); First we load the Express server and any routes we may need. There&amp;rsquo;s just the one.</description>
    </item>
    
    <item>
      <title>Annotated MERN I: Node.js</title>
      <link>https://sverona.dev/blog/mern/node/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/mern/node/</guid>
      <description>This post begins our look at James Vickery&amp;rsquo;s simple-mern repository.
./README.md, ./LICENSE These are pretty self-explanatory, so I&amp;rsquo;ll ignore them.
./package.json This is similar to the package.json generated automatically by create-react-app. I&amp;rsquo;ll split it up into three sections. The first section contains metadata for npm.
{ &amp;#34;name&amp;#34;: &amp;#34;simple-mern&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;0.2.0&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;the simplest MERN (MongoDB, Express, React and Node) setup&amp;#34;, &amp;#34;main&amp;#34;: &amp;#34;index.js&amp;#34;, &amp;#34;author&amp;#34;: &amp;#34;James Vickery&amp;#34;, &amp;#34;license&amp;#34;: &amp;#34;MIT&amp;#34;, } The next section specifies custom shell commands to run with npm.</description>
    </item>
    
    <item>
      <title>Mimicking LaTeX theorem environments with CSS</title>
      <link>https://sverona.dev/blog/mimicking-latex-theorem-environments-with-css/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/mimicking-latex-theorem-environments-with-css/</guid>
      <description>LaTeX supports &amp;ldquo;theorem environments,&amp;rdquo; like this:
(Image)
These aren&amp;rsquo;t hard to mimic with :before and :after:
article { counter-reset: definition theorem lemma example proposition corollary; } .definition:before { counter-increment: definition; content: &amp;#34;Definition &amp;#34; counter(definition) &amp;#34;.&amp;#34;; font-weight: bold; } .theorem:before { counter-increment: theorem; content: &amp;#34;Theorem &amp;#34; counter(theorem) &amp;#34;.&amp;#34;; font-weight: bold; } .lemma:before { counter-increment: lemma; content: &amp;#34;Lemma &amp;#34; counter(lemma) &amp;#34;.&amp;#34;; font-weight: bold; } .example:before { counter-increment: example; content: &amp;#34;Example &amp;#34; counter(example) &amp;#34;.</description>
    </item>
    
    <item>
      <title>\(\pi\) and \(e\) and the GCD</title>
      <link>https://sverona.dev/blog/gcd-ln/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/gcd-ln/</guid>
      <description>While doing some research for my Project Euler post, I found myself drawn to something else that blew my mind in high school &amp;mdash; the connection between the greatest common divisor and the Riemann zeta function.
For those of you just joining us:
The greatest common divisor of two nonzero integers is the largest positive number that divides them both. The Riemann zeta function is the series \[\zeta(s) = \sum_{n = 1}^\infty \frac1{n^s} = \frac1{1^s} + \frac1{2^s} + \frac1{3^s} + \cdots.</description>
    </item>
    
    <item>
      <title>Project Euler 1-100 in 49 hours</title>
      <link>https://sverona.dev/blog/project-euler/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/project-euler/</guid>
      <description>Project Euler is how I taught myself Python in high school, and so I find it incredibly nostalgic. It took 13-year-old me a lot of Googling and a few months to get through the first 100 problems. Why 100 specifically? Because I wanted to write this post honestly and those are the ones I&amp;rsquo;m allowed to talk about without them locking my account or something.
10-odd years and a graduate degree later, I decided to come back and solve them as fast as I could.</description>
    </item>
    
    <item>
      <title>Complex Variables</title>
      <link>https://sverona.dev/feynman/complex-variables/</link>
      <pubDate>Mon, 28 Oct 1946 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/feynman/complex-variables/</guid>
      <description>General Review Let \(A = a + bi\) and \(B = c + di.\) Then the rule of addition states \[A + B = (a + c) + i(b + d),\] and the rule of multiplication states \[AB = (ac - bd) + i(ad + bc).\]
An Argand diagram showing the complex number \(a + ib\) as a vector.
A complex number may also be represented as follows.
\[\begin{gathered} A = (a + bi) = \sqrt{a^2+b^2} \left[\frac{a}{\sqrt{a^2+b^2}} + \frac{bi}{\sqrt{a^2+b^2}}\right] \newline A = r(\cos \theta + i \sin \theta) \end{gathered}\]</description>
    </item>
    
    <item>
      <title>Integration</title>
      <link>https://sverona.dev/feynman/integration/</link>
      <pubDate>Fri, 18 Oct 1946 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/feynman/integration/</guid>
      <description>Methods Substitution By parts Differentiation of a parameter Series expansion Contour integration Numerical methods Special tricks Methods 3 to 7 are applicable particularly to definite integrals.
Complex Variable in Substitution Find \(\int_0^\infty e^{-ax} \cos bx ~\mathrm dx.\)
Since \(\cos bx = (e^{ibx} + e^{-ibx})/2\), we have
\[\begin{aligned} \int_0^\infty e^{-ax} \cos bx &amp;amp;= \frac12 \int_0^\infty e^{-(a - ib)x} ~\mathrm dx + \frac12 \int_0^\infty e^{-(a + ib)x} ~\mathrm dx \newline &amp;amp;= \frac12 \left( \frac1{a - ib} + \frac1{a + ib} \right) \newline &amp;amp;= \frac{a}{a^2 + b^2} \end{aligned}\]</description>
    </item>
    
    <item>
      <title>Series</title>
      <link>https://sverona.dev/feynman/series/</link>
      <pubDate>Wed, 16 Oct 1946 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/feynman/series/</guid>
      <description>Abel Summability Consider the series \(1 - 2 + 3 - \dots.\) Convert it to a power series in \(x\) as follows: \(S(x) = 1 - 2x + 3x^2 - \dots\)
Sum this power series:
\[\begin{aligned} \int S(x) ~dx &amp;amp;= x - x^2 + x^3 - \dots = \frac{x}{1 + x} \newline S(x) &amp;amp;= \frac{d}{dx}\left[\frac{x}{1 + x}\right] = \frac1{(1 + x)^2} \end{aligned}\]
The Abel sum of the original series is defined as the \(\lim_{x \to 1-} S(x)\).</description>
    </item>
    
    <item>
      <title>Elementary Mathematics</title>
      <link>https://sverona.dev/feynman/elementary-mathematics/</link>
      <pubDate>Mon, 14 Oct 1946 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/feynman/elementary-mathematics/</guid>
      <description>Equations The simplest way to solve any equation - except linear or quadratic equations - is by trial and error.
Example: Interpolation \(\frac{1}{1 + x^2} = 2x\)
\[\begin{array}{|l|l|l|l|} \mathbf{x} &amp;amp; \textbf{LHS} &amp;amp; \textbf{RHS} &amp;amp; \textbf{Difference} \newline 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1 \newline 1 &amp;amp; .5 &amp;amp; 2 &amp;amp; -1.5 \newline .4 &amp;amp; .862 &amp;amp; .8 &amp;amp; .062 \ . \end{array}\]
Example: Iteration Solve the equation for \(x\).
\(x = \frac12(1/1 + x^2)\)</description>
    </item>
    
  </channel>
</rss>
