<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on S. Verona Lišková</title>
    <link>https://sverona.dev/blog/</link>
    <description>Recent content in Blogs on S. Verona Lišková</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sverona.dev/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hypertrigonometric functions</title>
      <link>https://sverona.dev/blog/dixon/</link>
      <pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/dixon/</guid>
      <description>So, I fell down a Wiki-hole today and figured I could get a blog post out of it.For the curious: AuthaGraph projection → Lee conformal world in a tetrahedron → Dixon elliptic functions. Specifically, I encountered the Dixon elliptic functions \(\mathrm{sm}\) and \(\mathrm{cm}.\) These satisfy a generalization of the Pythagorean identity \[\sin^2 z + \cos^2 z = 1 \longrightarrow \operatorname{sm}^3 z + \operatorname{cm}^3 z = 1 \] with \(\operatorname{sm} 0 = 0, \operatorname{cm} 0 = 1.</description>
    </item>
    
    <item>
      <title>Automating transaction imports with Actual</title>
      <link>https://sverona.dev/blog/automating-actual/</link>
      <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/automating-actual/</guid>
      <description>My fiancé, who is a CFP, recently encouraged me to finally set up a budget. I found Actual to be the most appropriate client for me; I love the nice design and the very responsive devteam. So far it&amp;rsquo;s a wonderful open-source project that I want to contribute to in the future.
The killer feature Actual is currently missing is inbuilt transaction import. Apparently this is in development through Plaid integration, but I can&amp;rsquo;t find a timeline on this, and in order for me to be able to stick with a budget I need to not have to manually type in a payee, date, and amount every time I buy something.</description>
    </item>
    
    <item>
      <title>LeechBlock in qutebrowser</title>
      <link>https://sverona.dev/blog/qutebrowser-blocking/</link>
      <pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/qutebrowser-blocking/</guid>
      <description>I use qutebrowser as my daily driver. With the exception of the errant ad that Firefox or Chrome would catch,An active area of research. there is nothing to complain about.
Unfortunately I&amp;rsquo;ve developed a nasty habit of unthinkingly typing in anxiogenic websites. The usual solution on Chrome/Firefox is LeechBlock, but qutebrowser naturally doesn&amp;rsquo;t support extensions.I&amp;rsquo;m honestly fine with this design choice; most of the extensions I would need are implementable as user stylesheets/scripts/plugins, this one included.</description>
    </item>
    
    <item>
      <title>Refurbishing an old Twitter bot</title>
      <link>https://sverona.dev/blog/amazing-graphs/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/amazing-graphs/</guid>
      <description>Some time ago Numberphile released a series of videos concerning sequences in the OEIS with pretty plots. Inspired, I wrote a little Twitter bot that tweets out two such plots each day. I even got a follow from 3Blue1Brown. It was a wonderful source of dopamine for a while.
Because I hacked the thing together in a dayYou can check out the source code, if you&amp;rsquo;re okay with your eyes melting out of your skull.</description>
    </item>
    
    <item>
      <title>Mimicking LaTeX theorem environments with CSS</title>
      <link>https://sverona.dev/blog/mimicking-latex-theorem-environments-with-css/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/mimicking-latex-theorem-environments-with-css/</guid>
      <description>LaTeX supports &amp;ldquo;theorem environments,&amp;rdquo; like this:
(Image)
These aren&amp;rsquo;t hard to mimic with :before and :after:
article { counter-reset: definition theorem lemma example proposition corollary; } .definition:before { counter-increment: definition; content: &amp;#34;Definition &amp;#34; counter(definition) &amp;#34;.&amp;#34;; font-weight: bold; } .theorem:before { counter-increment: theorem; content: &amp;#34;Theorem &amp;#34; counter(theorem) &amp;#34;.&amp;#34;; font-weight: bold; } .lemma:before { counter-increment: lemma; content: &amp;#34;Lemma &amp;#34; counter(lemma) &amp;#34;.&amp;#34;; font-weight: bold; } .example:before { counter-increment: example; content: &amp;#34;Example &amp;#34; counter(example) &amp;#34;.</description>
    </item>
    
    <item>
      <title>\(\pi\) and \(e\) and the GCD</title>
      <link>https://sverona.dev/blog/gcd-ln/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/gcd-ln/</guid>
      <description>While doing some research for my Project Euler post, I found myself drawn to something else that blew my mind in high school &amp;mdash; the connection between the greatest common divisor and the Riemann zeta function.
For those of you just joining us:
The greatest common divisor of two nonzero integers is the largest positive number that divides them both. The Riemann zeta function is the series \[\zeta(s) = \sum_{n = 1}^\infty \frac1{n^s} = \frac1{1^s} + \frac1{2^s} + \frac1{3^s} + \cdots.</description>
    </item>
    
    <item>
      <title>Project Euler 1-100 in 49 hours</title>
      <link>https://sverona.dev/blog/project-euler/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sverona.dev/blog/project-euler/</guid>
      <description>Project Euler is how I taught myself Python in high school, and so I find it incredibly nostalgic. It took 13-year-old me a lot of Googling and a few months to get through the first 100 problems. Why 100 specifically? Because I wanted to write this post honestly and those are the ones I&amp;rsquo;m allowed to talk about without them locking my account or something.
10-odd years and a graduate degree later, I decided to come back and solve them as fast as I could.</description>
    </item>
    
  </channel>
</rss>
